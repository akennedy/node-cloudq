// Generated by CoffeeScript 1.3.3
var db, fs, get, pin, put, reload, request;

request = require('request');

fs = require('fs');

pin = require('linchpin');

db = 'http://localhost:5984/foobar';

get = request.defaults({
  json: true
});

put = request.defaults({
  method: 'put',
  json: true
});

module.exports = function(couchdb, cb) {
  db = couchdb;
  pin.on('COUCHDB:INIT:DONE', cb);
  return pin.emit('COUCHDB:INIT:START');
};

pin.on('COUCHDB:INIT:START', function() {
  console.log(db);
  return get(db, function(e, r, b) {
    if (b.error === 'not_found') {
      return pin.emit('COUCHDB:INIT:CREATEDB');
    } else {
      return pin.emit('COUCHDB:INIT:VIEWS');
    }
  });
});

pin.on('COUCHDB:INIT:CREATEDB', function() {
  return put(db, function(e, r, b) {
    console.log('Created Database: ' + db);
    if (b.ok === true) {
      return pin.emit('COUCHDB:INIT:VIEWS');
    }
  });
});

pin.on('COUCHDB:INIT:VIEWS', function() {
  var count, done, res, view, views, _i, _len, _results;
  views = fs.readdirSync(__dirname + '/views');
  count = views.length;
  done = function(view) {
    console.log('Created View: ' + view);
    count = count - 1;
    if (count === 0) {
      return pin.emit('COUCHDB:INIT:DONE');
    }
  };
  res = function(view) {
    return done(view);
  };
  _results = [];
  for (_i = 0, _len = views.length; _i < _len; _i++) {
    view = views[_i];
    _results.push(reload(view, res));
  }
  return _results;
});

reload = function(view, res) {
  var json, name;
  name = view.split('.')[0];
  json = fs.createReadStream(__dirname + '/views/' + view);
  return json.pipe(put("" + db + "/_design/" + name, function() {
    return res(name);
  }));
};
