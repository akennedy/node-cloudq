// Generated by CoffeeScript 1.3.3
var db, fs, get, pin, put, reload, request;

request = require('request');

fs = require('fs');

pin = require('linchpin');

db = '';

get = request.defaults({
  json: true
});

put = request.defaults({
  method: 'put',
  json: true
});

module.exports = function(couchdb, cb) {
  db = couchdb;
  pin.on('COUCHDB:INIT:DONE', cb);
  return pin.emit('COUCHDB:INIT:START');
};

pin.on('COUCHDB:INIT:START', function() {
  return get(db, function(e, r, b) {
    if ((b != null ? b.error : void 0) === 'not_found') {
      return pin.emit('COUCHDB:INIT:CREATEDB');
    } else {
      return pin.emit('COUCHDB:INIT:VIEWS');
    }
  });
});

pin.on('COUCHDB:INIT:CREATEDB', function() {
  return put(db, function(e, r, b) {
    if (b.ok === true) {
      return pin.emit('COUCHDB:INIT:VIEWS');
    }
  });
});

pin.on('COUCHDB:INIT:VIEWS', function() {
  var count, done, view, views, _i, _len, _results;
  views = fs.readdirSync(__dirname + '/views');
  count = views.length;
  done = function(view) {
    count -= 1;
    pin.emit('LOG/INFO', 'Created View: ' + view);
    if (count === 0) {
      return pin.emit('COUCHDB:INIT:DONE');
    }
  };
  _results = [];
  for (_i = 0, _len = views.length; _i < _len; _i++) {
    view = views[_i];
    _results.push(reload(view, done));
  }
  return _results;
});

reload = function(view, result) {
  var json, name, url;
  name = view.split('.')[0];
  json = JSON.parse(fs.readFileSync(__dirname + '/views/' + view));
  url = "" + db + "/_design/" + name;
  return get(url, function(e, r, b) {
    if ((b != null ? b._rev : void 0) != null) {
      json._rev = b._rev;
    }
    return put(url, {
      json: json
    }, function(e, r, b) {
      return result(name);
    });
  });
};
